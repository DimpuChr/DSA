The shebang (#!) is a character sequence at the beginning of a script that indicates which interpreter should be used to execute the script.
Syntax: The shebang is followed by the path to the interpreter
#!/path/to/interpreter
Purpose: It tells the operating system how to execute the script by specifying the path to the interpreter that should be used.
Common Shebang Examples
Bash Script: #!/bin/bash  or #!/usr/bin/env bash
Including a shebang at the beginning of your script is a best practice that makes your scripts more flexible and easier to use.
It allows users to run the script directly and ensures that the script uses the correct interpreter.

#!/usr/bin/env bash
Portability: This approach is more portable across different Unix-like systems. It uses the env command to locate the bash binary in the system's PATH,
ensuring that the script runs with the bash interpreter even if it is not located in /bin.

#!/bin/bash
Specificity: This specifies the exact path to the bash interpreter. It ensures that the script uses the bash located in /bin,
which can be beneficial in controlled environments where you want to guarantee the specific interpreter.

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

The commands wq! and :q! are used in the Vim text editor:
wq!: This command forces Vim to write (save) the file and then quit. The ! overrides any warnings, such as if the file is read-only.
:q!: This command forces Vim to quit without saving any changes. The ! overrides any warnings about unsaved changes.

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

./ or sh (to run any executable files)

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

